{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yurim/Desktop/battle_coding/src/pages/Register/components/InputUserInfo.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport './InputUserInfo.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet regExpForId = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{4,12}$/;\nlet regExpForPassword = /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,16}$/;\nconst InputUserInfo = ({\n  onChange,\n  onChangeValidation\n}) => {\n  _s();\n  const [inputId, setInputId] = useState({\n    isValid: null\n  });\n  const [inputPwd, setInputPwd] = useState({\n    value: '',\n    isValid: null\n  });\n  const [inputPwdChk, setInputPwdChk] = useState({\n    isValid: null\n  });\n  const inputHandler = event => {\n    const {\n      nickname,\n      value\n    } = event.target;\n    if (nickname === 'id') {\n      setInputId(prevState => {\n        return {\n          ...prevState,\n          isValid: regExpForId.test(value)\n        };\n      });\n      onChange(nickname, value);\n    }\n    if (nickname === 'password') {\n      setInputPwd(prevState => {\n        return {\n          ...prevState,\n          value: value,\n          isValid: regExpForPassword.test(value)\n        };\n      });\n      onChange(nickname, value);\n    }\n    if (nickname === 'passwordCheck') {\n      setInputPwdChk(prevState => {\n        return {\n          ...prevState,\n          isValid: inputPwd.isValid && inputPwd.value === value\n        };\n      });\n    }\n  };\n  useEffect(() => {\n    onChangeValidation('userInfo', inputId.isValid && inputPwd.isValid && inputPwdChk.isValid);\n  }, [onChangeValidation, inputId, inputPwd, inputPwdChk]);\n  const InputClasses = inputId.isValid ? 'valid' : inputId.isValid === null ? '' : 'invalid';\n  const pwdInputclasses = inputPwd.isValid ? 'valid' : inputPwd.isValid === null ? '' : 'invalid';\n  const pwdChkInputClasses = inputPwdChk.isValid ? 'valid' : inputPwdChk.isValid === null ? '' : 'invalid';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: `${idInputClasses}`,\n      ...USER_INFO[0],\n      onChange: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), inputId.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"valid\",\n      children: \"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uC544\\uC774\\uB514\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }, this), inputId.isValid !== null && !inputId.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"invalid\",\n      children: \"\\uC544\\uC774\\uB514\\uB294 4~12\\uC790 \\uC601\\uBB38\\uACFC \\uC22B\\uC790\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: `${pwdInputClasses}`,\n      ...USER_INFO[1],\n      onChange: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), inputPwd.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Valid\",\n      children: \"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uBE44\\uBC00\\uBC88\\uD638\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 34\n    }, this), inputPwd.isValid !== null && !inputPwd.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"invalid\",\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 \\uC601\\uBB38, \\uC22B\\uC790, \\uD2B9\\uC218\\uBB38\\uC790\\uB97C \\uCD5C\\uC18C \\uD55C \\uBC88 \\uC774\\uC0C1 \\uC0AC\\uC6A9\\uD558\\uC5EC 8~16\\uC790\\uB85C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: `${pwdChkInputClasses}`,\n      ...USER_INFO[2],\n      onChange: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), inputPwdChk.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Valid\",\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uC640 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\\uC774 \\uC77C\\uCE58\\uD569\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), inputPwdChk.isValid !== null && !inputPwdChk.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"invalid\",\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uD55C \\uBC88 \\uB354 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(InputUserInfo, \"NnKc40/HsBiDm0og0z+ildHNtaI=\");\n_c = InputUserInfo;\nconst USER_INFO = [{\n  id: 101,\n  name: 'id',\n  placeholder: '아이디',\n  type: 'text'\n}, {\n  id: 102,\n  name: 'password',\n  placeholder: '비밀번호',\n  type: 'password'\n}, {\n  id: 103,\n  name: 'passWordCheck',\n  placeholder: '비밀번호 확인',\n  type: 'password'\n}];\nexport default InputUserInfo;\nvar _c;\n$RefreshReg$(_c, \"InputUserInfo\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","regExpForId","regExpForPassword","InputUserInfo","onChange","onChangeValidation","_s","inputId","setInputId","isValid","inputPwd","setInputPwd","value","inputPwdChk","setInputPwdChk","inputHandler","event","nickname","target","prevState","test","InputClasses","pwdInputclasses","pwdChkInputClasses","children","className","idInputClasses","USER_INFO","fileName","_jsxFileName","lineNumber","columnNumber","pwdInputClasses","_c","id","name","placeholder","type","$RefreshReg$"],"sources":["/Users/jeong-yurim/Desktop/battle_coding/src/pages/Register/components/InputUserInfo.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport './InputUserInfo.scss';\n\nlet regExpForId = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{4,12}$/;\nlet regExpForPassword = /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,16}$/;\n\nconst InputUserInfo = ({ onChange, onChangeValidation }) => {\n    const [inputId, setInputId] = useState({\n        isValid: null,\n    });\n    const [inputPwd, setInputPwd] = useState({\n        value: '',\n        isValid: null,\n    });\n    const [inputPwdChk, setInputPwdChk] = useState({\n        isValid: null,\n    });\n\n    const inputHandler = event => {\n        const { nickname, value } = event.target;\n\n        if (nickname === 'id') {\n            setInputId(prevState => {\n                return { ...prevState, isValid: regExpForId.test(value) };\n            });\n            onChange(nickname, value);\n        }\n\n        if (nickname === 'password') {\n            setInputPwd(prevState => {\n                return {\n                    ...prevState,\n                    value: value,\n                    isValid: regExpForPassword.test(value),\n                };\n            });\n            onChange(nickname, value);\n        }\n\n        if (nickname === 'passwordCheck') {\n            setInputPwdChk(prevState => {\n                return {\n                    ...prevState,\n                    isValid: inputPwd.isValid && inputPwd.value === value,\n                };\n            });\n        }\n    };\n\n    useEffect(() => {\n        onChangeValidation(\n            'userInfo',\n            inputId.isValid && inputPwd.isValid && inputPwdChk.isValid\n        );\n    }, [onChangeValidation, inputId, inputPwd, inputPwdChk]);\n\n    const InputClasses = inputId.isValid\n        ? 'valid'\n        : inputId.isValid === null\n        ? ''\n        : 'invalid';\n    \n    const pwdInputclasses = inputPwd.isValid\n        ? 'valid'\n        : inputPwd.isValid === null\n        ? ''\n        : 'invalid';\n    \n    const pwdChkInputClasses = inputPwdChk.isValid\n        ? 'valid'\n        : inputPwdChk.isValid === null\n        ? ''\n        : 'invalid';\n    \n    return (\n        <>\n            <input \n                className={`${idInputClasses}`}\n                {...USER_INFO[0]}\n                onChange={inputHandler}\n            />\n            {inputId.isValid && <p className=\"valid\">사용 가능한 아이디입니다.</p>}\n            {inputId.isValid !== null && !inputId.isValid && (\n                <p className=\"invalid\">\n                    아이디는 4~12자 영문과 숫자를 사용하여 입력해주세요\n                </p>\n            )}\n            <input\n                className={`${pwdInputClasses}`}\n                {...USER_INFO[1]}\n                onChange={inputHandler}\n            />\n            {inputPwd.isValid && <p className=\"Valid\">사용 가능한 비밀번호입니다.</p>}\n            {inputPwd.isValid !== null && !inputPwd.isValid && (\n                <p className=\"invalid\">\n                    비밀번호는 영문, 숫자, 특수문자를 최소 한 번 이상 사용하여\n                    8~16자로 입력해 주세요.\n                </p>\n            )}\n            <input \n                className={`${pwdChkInputClasses}`}\n                {...USER_INFO[2]}\n                onChange={inputHandler}\n            />\n            {inputPwdChk.isValid && (\n                <p className=\"Valid\">비밀번호와 비밀번호 확인이 일치합니다.</p>\n            )}\n            {inputPwdChk.isValid !== null && !inputPwdChk.isValid && (\n                <p className=\"invalid\">비밀번호를 한 번 더 입력해 주세요.</p>\n            )}\n        </>\n    );\n}\n\nconst USER_INFO = [\n    {\n        id: 101, \n        name: 'id', \n        placeholder: '아이디', \n        type: 'text',\n    },\n    {\n        id: 102,\n        name: 'password',\n        placeholder: '비밀번호',\n        type: 'password',\n    },\n    {\n        id: 103,\n        name: 'passWordCheck',\n        placeholder: '비밀번호 확인',\n        type: 'password',\n    },\n];\n\nexport default InputUserInfo;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,IAAIC,WAAW,GAAG,2CAA2C;AAC7D,IAAIC,iBAAiB,GAAG,oEAAoE;AAE5F,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC;IACnCc,OAAO,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACrCiB,KAAK,EAAE,EAAE;IACTH,OAAO,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC;IAC3Cc,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAMM,YAAY,GAAGC,KAAK,IAAI;IAC1B,MAAM;MAAEC,QAAQ;MAAEL;IAAM,CAAC,GAAGI,KAAK,CAACE,MAAM;IAExC,IAAID,QAAQ,KAAK,IAAI,EAAE;MACnBT,UAAU,CAACW,SAAS,IAAI;QACpB,OAAO;UAAE,GAAGA,SAAS;UAAEV,OAAO,EAAER,WAAW,CAACmB,IAAI,CAACR,KAAK;QAAE,CAAC;MAC7D,CAAC,CAAC;MACFR,QAAQ,CAACa,QAAQ,EAAEL,KAAK,CAAC;IAC7B;IAEA,IAAIK,QAAQ,KAAK,UAAU,EAAE;MACzBN,WAAW,CAACQ,SAAS,IAAI;QACrB,OAAO;UACH,GAAGA,SAAS;UACZP,KAAK,EAAEA,KAAK;UACZH,OAAO,EAAEP,iBAAiB,CAACkB,IAAI,CAACR,KAAK;QACzC,CAAC;MACL,CAAC,CAAC;MACFR,QAAQ,CAACa,QAAQ,EAAEL,KAAK,CAAC;IAC7B;IAEA,IAAIK,QAAQ,KAAK,eAAe,EAAE;MAC9BH,cAAc,CAACK,SAAS,IAAI;QACxB,OAAO;UACH,GAAGA,SAAS;UACZV,OAAO,EAAEC,QAAQ,CAACD,OAAO,IAAIC,QAAQ,CAACE,KAAK,KAAKA;QACpD,CAAC;MACL,CAAC,CAAC;IACN;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZS,kBAAkB,CACd,UAAU,EACVE,OAAO,CAACE,OAAO,IAAIC,QAAQ,CAACD,OAAO,IAAII,WAAW,CAACJ,OACvD,CAAC;EACL,CAAC,EAAE,CAACJ,kBAAkB,EAAEE,OAAO,EAAEG,QAAQ,EAAEG,WAAW,CAAC,CAAC;EAExD,MAAMQ,YAAY,GAAGd,OAAO,CAACE,OAAO,GAC9B,OAAO,GACPF,OAAO,CAACE,OAAO,KAAK,IAAI,GACxB,EAAE,GACF,SAAS;EAEf,MAAMa,eAAe,GAAGZ,QAAQ,CAACD,OAAO,GAClC,OAAO,GACPC,QAAQ,CAACD,OAAO,KAAK,IAAI,GACzB,EAAE,GACF,SAAS;EAEf,MAAMc,kBAAkB,GAAGV,WAAW,CAACJ,OAAO,GACxC,OAAO,GACPI,WAAW,CAACJ,OAAO,KAAK,IAAI,GAC5B,EAAE,GACF,SAAS;EAEf,oBACIX,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACI1B,OAAA;MACI2B,SAAS,EAAE,GAAGC,cAAc,EAAG;MAAA,GAC3BC,SAAS,CAAC,CAAC,CAAC;MAChBvB,QAAQ,EAAEW;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACDxB,OAAO,CAACE,OAAO,iBAAIX,OAAA;MAAG2B,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC1DxB,OAAO,CAACE,OAAO,KAAK,IAAI,IAAI,CAACF,OAAO,CAACE,OAAO,iBACzCX,OAAA;MAAG2B,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAEvB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACN,eACDjC,OAAA;MACI2B,SAAS,EAAE,GAAGO,eAAe,EAAG;MAAA,GAC5BL,SAAS,CAAC,CAAC,CAAC;MAChBvB,QAAQ,EAAEW;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACDrB,QAAQ,CAACD,OAAO,iBAAIX,OAAA;MAAG2B,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5DrB,QAAQ,CAACD,OAAO,KAAK,IAAI,IAAI,CAACC,QAAQ,CAACD,OAAO,iBAC3CX,OAAA;MAAG2B,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAGvB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACN,eACDjC,OAAA;MACI2B,SAAS,EAAE,GAAGF,kBAAkB,EAAG;MAAA,GAC/BI,SAAS,CAAC,CAAC,CAAC;MAChBvB,QAAQ,EAAEW;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACDlB,WAAW,CAACJ,OAAO,iBAChBX,OAAA;MAAG2B,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAqB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChD,EACAlB,WAAW,CAACJ,OAAO,KAAK,IAAI,IAAI,CAACI,WAAW,CAACJ,OAAO,iBACjDX,OAAA;MAAG2B,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjD;EAAA,eACH,CAAC;AAEX,CAAC;AAAAzB,EAAA,CA1GKH,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AA4GnB,MAAMwB,SAAS,GAAG,CACd;EACIO,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,IAAI;EACVC,WAAW,EAAE,KAAK;EAClBC,IAAI,EAAE;AACV,CAAC,EACD;EACIH,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,UAAU;EAChBC,WAAW,EAAE,MAAM;EACnBC,IAAI,EAAE;AACV,CAAC,EACD;EACIH,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,eAAe;EACrBC,WAAW,EAAE,SAAS;EACtBC,IAAI,EAAE;AACV,CAAC,CACJ;AAED,eAAelC,aAAa;AAAC,IAAA8B,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}