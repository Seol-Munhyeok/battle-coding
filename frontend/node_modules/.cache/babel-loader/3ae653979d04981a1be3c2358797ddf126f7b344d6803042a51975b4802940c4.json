{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yurim/Desktop/battle_coding/src/pages/Register/components/UserInputForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport InputInfo from './InputInfo';\nimport './UserInputForm.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInputForm = () => {\n  _s();\n  const [info, setInfo] = useState({\n    nickname: '',\n    email: '',\n    password: '',\n    isValidNickname: false,\n    isValidPwd: false,\n    isValidPwdChk: false\n  });\n  const [isValidButton, setIsValidButton] = useState(false);\n  const navigate = useNavigate();\n  const infoHandler = (key, value) => {\n    setInfo(prevState => ({\n      ...prevState,\n      [key]: value\n    }));\n  };\n  const validationHandler = useCallback((key, isValid) => {\n    if (![\"isValidNickname\", \"isValidPwd\", \"isValidPwdChk\"].includes(key)) {\n      console.error(`Invalid key: ${key}`);\n      return;\n    }\n    setInfo(prevState => ({\n      ...prevState,\n      [key]: isValid\n    }));\n    console.log(`Validation Updated: ${key} → ${isValid}`);\n  }, []);\n  const submitHandler = event => {\n    event.preventDefault();\n    console.log('Submitting form:', info);\n  };\n  useEffect(() => {\n    setIsValidButton(isValidNickname && isValidPwd && isValidPwdChk);\n  }, [isValidNickname, isValidPwd, isValidPwdChk]);\n  useEffect(() => {\n    console.log(\"isValidButton 상태:\", isValidButton);\n  }, [isValidButton]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"regsiterSubmitForm\",\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(InputInfo, {\n      onChange: infoHandler,\n      OnChangeValidation: validationHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !isValidButton,\n      onClick: () => console.log(\"클릭됨\"),\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(UserInputForm, \"OIanBIiQJep0MzstOX7OHitbouc=\", false, function () {\n  return [useNavigate];\n});\n_c = UserInputForm;\nexport default UserInputForm;\nvar _c;\n$RefreshReg$(_c, \"UserInputForm\");","map":{"version":3,"names":["useState","useEffect","useCallback","useNavigate","InputInfo","jsxDEV","_jsxDEV","UserInputForm","_s","info","setInfo","nickname","email","password","isValidNickname","isValidPwd","isValidPwdChk","isValidButton","setIsValidButton","navigate","infoHandler","key","value","prevState","validationHandler","isValid","includes","console","error","log","submitHandler","event","preventDefault","className","onSubmit","children","onChange","OnChangeValidation","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/jeong-yurim/Desktop/battle_coding/src/pages/Register/components/UserInputForm.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport InputInfo from './InputInfo';\nimport './UserInputForm.scss';\n\nconst UserInputForm = () => {\n    const [info, setInfo] = useState({\n        nickname: '',\n        email: '',\n        password: '',\n        isValidNickname: false,\n        isValidPwd: false,\n        isValidPwdChk: false,\n    });\n\n    const [isValidButton, setIsValidButton] = useState(false);\n    const navigate = useNavigate();\n\n    const infoHandler = (key, value) => {\n        setInfo(prevState => ({\n                ...prevState,\n                [key]: value \n        }));\n    };\n\n    const validationHandler = useCallback((key, isValid) => {\n        if (![\"isValidNickname\", \"isValidPwd\", \"isValidPwdChk\"].includes(key)) {\n            console.error(`Invalid key: ${key}`);\n            return;\n        }    \n        \n        setInfo(prevState => ({\n            ...prevState,\n            [key]: isValid,\n        }));\n        console.log(`Validation Updated: ${key} → ${isValid}`);\n    }, []);\n\n    const submitHandler = event => {\n        event.preventDefault();\n        console.log('Submitting form:', info);\n    }\n\n    useEffect(() => {\n        setIsValidButton(isValidNickname && isValidPwd && isValidPwdChk);\n    }, [isValidNickname, isValidPwd, isValidPwdChk]);\n\n    useEffect(() => {\n        console.log(\"isValidButton 상태:\", isValidButton);\n    }, [isValidButton]);\n    \n    return (\n        <form className=\"regsiterSubmitForm\" onSubmit={submitHandler}>\n            <InputInfo onChange={infoHandler} OnChangeValidation={validationHandler} />\n            <button disabled={!isValidButton}  onClick={() => console.log(\"클릭됨\")}>회원가입</button>\n        </form>\n    );\n};\n\nexport default UserInputForm;\n\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC7BW,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,KAAK;IACtBC,UAAU,EAAE,KAAK;IACjBC,aAAa,EAAE;EACnB,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMmB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,WAAW,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;IAChCZ,OAAO,CAACa,SAAS,KAAK;MACd,GAAGA,SAAS;MACZ,CAACF,GAAG,GAAGC;IACf,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAME,iBAAiB,GAAGtB,WAAW,CAAC,CAACmB,GAAG,EAAEI,OAAO,KAAK;IACpD,IAAI,CAAC,CAAC,iBAAiB,EAAE,YAAY,EAAE,eAAe,CAAC,CAACC,QAAQ,CAACL,GAAG,CAAC,EAAE;MACnEM,OAAO,CAACC,KAAK,CAAC,gBAAgBP,GAAG,EAAE,CAAC;MACpC;IACJ;IAEAX,OAAO,CAACa,SAAS,KAAK;MAClB,GAAGA,SAAS;MACZ,CAACF,GAAG,GAAGI;IACX,CAAC,CAAC,CAAC;IACHE,OAAO,CAACE,GAAG,CAAC,uBAAuBR,GAAG,MAAMI,OAAO,EAAE,CAAC;EAC1D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,aAAa,GAAGC,KAAK,IAAI;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBL,OAAO,CAACE,GAAG,CAAC,kBAAkB,EAAEpB,IAAI,CAAC;EACzC,CAAC;EAEDR,SAAS,CAAC,MAAM;IACZiB,gBAAgB,CAACJ,eAAe,IAAIC,UAAU,IAAIC,aAAa,CAAC;EACpE,CAAC,EAAE,CAACF,eAAe,EAAEC,UAAU,EAAEC,aAAa,CAAC,CAAC;EAEhDf,SAAS,CAAC,MAAM;IACZ0B,OAAO,CAACE,GAAG,CAAC,mBAAmB,EAAEZ,aAAa,CAAC;EACnD,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBACIX,OAAA;IAAM2B,SAAS,EAAC,oBAAoB;IAACC,QAAQ,EAAEJ,aAAc;IAAAK,QAAA,gBACzD7B,OAAA,CAACF,SAAS;MAACgC,QAAQ,EAAEhB,WAAY;MAACiB,kBAAkB,EAAEb;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3EnC,OAAA;MAAQoC,QAAQ,EAAE,CAACzB,aAAc;MAAE0B,OAAO,EAAEA,CAAA,KAAMhB,OAAO,CAACE,GAAG,CAAC,KAAK,CAAE;MAAAM,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEf,CAAC;AAACjC,EAAA,CApDID,aAAa;EAAA,QAWEJ,WAAW;AAAA;AAAAyC,EAAA,GAX1BrC,aAAa;AAsDnB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}